{"version":3,"sources":["utils/API.js","components/album/album.js","components/search/search.js","components/navbar/navbar.js","components/noResults/noResults.js","components/widget/widget.js","pages/trackList/trackList.js","pages/albumTracklist/albumTracklist.js","pages/results/results.js","components/topSong/topSong.js","pages/topHits/topHits.js","App.js","serviceWorker.js","index.js"],"names":["API","searchQuery","query","axios","get","getArtist","artist","getTrackList","artistID","getTopHits","getAlbumTracklist","albumID","Album","props","className","onClick","displayAlbum","src","album","alt","title","Search","onChange","event","setState","target","id","value","state","type","this","placeholder","to","Component","Navbar","NoResults","href","style","textDecoration","underline","Widget","playSong","document","getElementById","play","isPlaying","pauseSong","pause","preview","track","albumCover","albumTitle","TrackList","tracklist","componentDidMount","map","AlbumTracklist","console","log","Results","initializeComponent","albumList","albumIDs","then","res","data","length","noResults","i","indexOf","push","image","picture","albums","name","bio","summary","match","params","componentWillReceiveProps","nextProps","toggle","albumTracklist","displayBio","toggleComponent","TopSong","useState","setIsPlaying","changePlaying","width","height","viewBox","fill","xmlns","fillRule","d","TopHits","tracks","song","currentSong","App","basename","process","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.59706649.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API = {\n\n    searchQuery(query) {\n        return(\n            axios.get(`/search?q=artist:'${query}'`)\n        )\n    },\n\n    getArtist(artist) {\n        return axios.get(`http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=${artist}&api_key=b287ff2c1c76c0da8f617ca184fbfd04&format=json`)\n    },\n\n    getTrackList(artistID) {\n        return(\n            axios.get(`/artist/${artistID}/top?limit=50`)\n        )\n    },\n\n    getTopHits() {\n        return(\n            axios.get('/chart')\n        )\n    },\n\n    getAlbumTracklist(albumID) {\n        return(\n            axios.get(`/album/${albumID}/tracks`)\n        )\n    }\n}\n\nexport default API;","import React from 'react';\n\nimport './style.css';\n\nconst Album = (props) => {\n\n    // console.log(props.album)\n\n\n    return(\n        <div>\n            <div className='album'>\n                <button className='album-cover-button' onClick={() => props.displayAlbum()}>\n                    <img src={props.album['cover_medium']} className='album-cover' alt='album cover' />\n                </button>\n                <div className='results-album-title'><h5>{props.album.title}</h5></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Album;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './style.css';\n\nclass Search extends Component {\n    constructor() {\n        super();\n        this.state={\n            query: ''\n        }\n    }\n\n    onChange = (event) => {\n        this.setState({[event.target.id]: event.target.value})\n    }\n\n    render() {\n        return(\n            <div>\n                <div className='search'>\n                    <input type='text' id='query' onChange={this.onChange} placeholder='Search Artists'></input>\n                    <Link to={`/results/${this.state.query}`}><button className='search'><i className=\"fas fa-search search-icon\"></i></button></Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './style.css';\n\nimport Search from '../search/search';\n\nfunction Navbar() {\n    return(\n        <nav className=\"navbar navbar-light justify-content-between container-fluid\">\n            <Link to='/'><span className=\"h2\"><i className=\"fas fa-music\"></i> Beatstream</span></Link>\n            <form className=\"form-inline\">\n                <Search />\n                {/* <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                <button>Search</button> */}\n            </form>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from 'react';\n\nimport './style.css';\n\nfunction NoResults() {\n    return(\n        <div className='no-results-container'>\n            <h1 className='oops'>Oops!</h1>\n            <div>No results matched your search.</div>\n            {/* <div>Please try a different search or</div> */}\n            <div className='top-hits-link'>\n                <a href='/' style={{ textDecoration: 'none', underline: 'none' }}><i className=\"fas fa-arrow-left\"></i> Top Hits</a>\n            </div>\n        </div>\n    )\n}\n\nexport default NoResults;","import React, { Component } from 'react';\n\nimport './style.css';\n\nclass Widget extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tpreview: props.track.preview,\n\t\t\ttitle: props.track.title,\n\t\t\tisPlaying: false\n\t\t}\n\t}\n\n\tplaySong = () => {\n\t\tlet audioEl = document.getElementById(this.state.title);\n\t\taudioEl.play();\n\t\tthis.setState({\n\t\t\tisPlaying: true\n\t\t})\n\t}\n\n\tpauseSong = () => {\n\t\tlet audioEl = document.getElementById(this.state.title);\n\t\taudioEl.pause();\n\t\tthis.setState({\n\t\t\tisPlaying: false\n\t\t})\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div className='widget'>\n\t\t\t\t<div className='row widget-row'>\n\t\t\t\t\t<div className='col-lg-1 col-2 col-sm-3 col-3 album-cover-small'><img src={this.props.albumCover} alt='cover' /></div>\n\t\t\t\t\t<div className='col-lg-9 col-sm-8 col-8 song-title'>\n\t\t\t\t\t\t<audio id={this.state.title} src={this.state.preview}></audio>\n\t\t\t\t\t\t<div className='h5'>{this.state.title}</div>\n\t\t\t\t\t\t<div>{this.props.albumTitle}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col-lg-1 col-sm-1 col-1 buttons'>\n\t\t\t\t\t\t{!this.state.isPlaying && <button onClick={this.playSong} className='play-button'><i className=\"fas fa-play\"></i></button>}\n\t\t\t\t\t\t{this.state.isPlaying && <button onClick={this.pauseSong} className='pause-button'><i className=\"fas fa-pause\"></i></button>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Widget;","import React, { Component } from 'react';\n\nimport Widget from '../../components/widget/widget';\n\nimport './style.css';\n\n\nclass TrackList extends Component {\n\n    state = {\n        tracklist: []\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            tracklist: this.props.tracklist\n        })\n    }\n\n    render() {\n        return(\n            <div className='container-fluid results-tracklist'>\n                {this.state.tracklist.map(track => {\n                    return(\n                        <div className='artist-track'><Widget track={track} albumCover={track.album['cover_small']} albumTitle={track.album.title} /></div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default TrackList;\n\n// class TrackList extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             tracklist: [],\n//             image: '',\n//             title: ''\n//         }\n//     }\n\n//     componentDidMount() {\n//         //console.log(this.props.location.state.image)\n//         //console.log(this.props.match.params.album)\n//         let albumID = this.props.match.params.album;\n//         axios.get(`https://thingproxy.freeboard.io/fetch/https://api.deezer.com/album/${albumID}/tracks`)\n//             .then(res => {\n//                 console.log(res)\n//                 this.setState({\n//                     tracklist: res.data.data\n//                 })\n//             })\n//     }\n\n//     render() {\n//         return(\n//             <div><Navbar />\n//                 <div>\n//                     <div className='album-info-wrapper'>\n//                         <div className='container album-info'>\n//                             <div className='row'>\n//                                 {/* <div className='col-lg-4'>\n//                                     <img src={this.props.location.state.image} className='album-img' />\n//                                 </div>\n//                                 <div className='col-lg-8 album-title'>\n//                                     <h1>{this.props.location.state.title}</h1>\n//                                     <h5>{this.props.location.state.artist}</h5>\n//                                 </div> */}\n//                                     <img src={this.props.location.state.image} className='album-img' alt='album cover' />\n                                    \n//                             </div>\n//                             <div className='row album-title'>\n//                                 <div className='col-lg-12'>\n//                                 <h3>{this.props.location.state.title}</h3>\n//                                 </div>\n//                                 <br />\n//                                 <div className='col-lg-12'><h5>{this.props.location.state.artist}</h5></div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                     <div className='tracklist-header .display-1'>\n//                         <h3>Tracklist</h3>\n//                     </div>\n//                     <div className='tracklist'>\n//                         {this.state.tracklist.map(track => {\n//                             return(\n//                                 <Widget track={track} image={this.state.image} title={this.state.title} />\n//                             )\n//                         })}\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n\n\n//     // axios.get(`https://cors-anywhere.herokuapp.com/${props.location.state.tracklist}`)\n//     //     .then(res => {\n//     //         console.log('tracklist.js')\n//     //         //console.log(res.data.data);\n//     //         res.data.data.map(track => {\n//     //             console.log(track)\n//     //             return(\n//     //                 <div>{track.title}</div>\n//     //             )\n//     //         })\n//     //     })\n//     // }\n// }\n\n// export default TrackList;","import React, { Component } from 'react';\n\nimport Widget from '../../components/widget/widget';\n\nimport './style.css';\n\n\nclass AlbumTracklist extends Component {\n\n    state = {\n        tracklist: []\n    }\n\n    componentDidMount = () => {\n        console.log(this.props.tracklist)\n        this.setState({\n            tracklist: this.props.tracklist,\n            albumCover: this.props.albumCover,\n            albumTitle: this.props.albumTitle\n        })\n    }\n\n    render() {\n        return(\n            <div className='container-fluid results-tracklist'>\n                {this.state.tracklist.map(track => {\n                    return(\n                        <div className='artist-track'><Widget track={track} albumCover={this.state.albumCover} albumTitle={this.state.albumTitle} /></div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default AlbumTracklist;","import React, {Component} from 'react';\n\nimport API from '../../utils/API';\n\nimport Album from '../../components/album/album';\nimport Navbar from '../../components/navbar/navbar';\nimport NoResults from '../../components/noResults/noResults';\nimport TrackList from '../trackList/trackList';\nimport AlbumTracklist from '../albumTracklist/albumTracklist';\n\n//import axios from 'axios';\n\nimport './style.css';\n\nclass Results extends Component {\n    constructor() {\n        super();\n        this.state={\n            artist: '',\n            albums: [],\n            artistID: 0,\n            toggle: 'albums',\n            tracklist: [],\n            noResults: false,\n            bio: '',\n            image: '',\n            albumCover: '',\n            albumTitle: '',\n            albumTracklist: [],\n            displayBio: false\n        }\n    }\n\n    initializeComponent = (artist) => {\n        let albumList = [];\n        let albumIDs = [];\n\n        API.searchQuery(artist)\n            .then(res => {\n                console.log(res);\n                if(res.data.data.length === 0) {\n                    console.log('no results')\n                    this.setState({\n                        noResults: true\n                    })\n                }\n\n                else {\n                    //push unique albums to albumList, prevents album duplicates\n                    for(let i=0; i<res.data.data.length; i++) {\n                        let albumID = res.data.data[i].album.id;\n                        if(albumIDs.indexOf(albumID) === -1) {\n                            albumIDs.push(albumID);\n                            albumList.push(res.data.data[i])\n                        }\n                    }\n\n                    this.setState({\n                        image: res.data.data[0].artist.picture,\n                        albums: albumList,\n                        artist: res.data.data[0].artist.name,\n                        artistID: res.data.data[0].artist.id\n                    })\n\n                    API.getTrackList(res.data.data[0].artist.id)\n                        .then(res => {\n                            console.log(res)\n                            this.setState({\n                                tracklist: res.data.data\n                            })\n                        })\n\n\n                    API.getArtist(artist)\n                    .then(res => {\n                        console.log(res.data)\n                        this.setState({\n                            bio: res.data.artist.bio.summary\n                        })\n                    })\n                }\n            })\n    }\n\n    componentDidMount = (props) => {\n        let artist = this.props.match.params.artist;\n        this.initializeComponent(artist);\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        //allows user to perform consecutive searches\n        let artist = nextProps.match.params.artist;\n        this.initializeComponent(artist)\n    }\n\n    toggle(toggleComponent) {\n        this.setState({\n            toggle: toggleComponent\n        })\n    }\n\n    displayAlbum = (album) => {\n        console.log(album)\n        console.log(album.album.tracklist)\n\n        API.getAlbumTracklist(album.album.id)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    toggle: 'albumTracklist',\n                    albumTracklist: res.data.data,\n                    albumCover: album.album['cover_small'],\n                    albumTitle: album.album.title\n                })\n            })\n    }\n\n    displayBio = () => {\n        this.setState({\n            displayBio: !this.state.displayBio\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <Navbar />\n\n                {this.state.noResults && <NoResults />}\n                \n                {!this.state.noResults &&\n                    <div className='container-fluid results-container'>\n                        <div className='row results'>\n                            <div className='col-lg-3 artist-bio'>\n                                <img src={this.state.image} className='artist-image' alt='artist' />\n                                <h3 className='artist-name'>{this.state.artist}</h3>\n                               <div className='small-screen-bio'>\n                                    <div className='more-info'>\n                                        <button className='more-info-button' onClick={this.displayBio}><i className=\"fas fa-chevron-down\"></i></button>\n                                    </div>\n                                    <div className={this.state.displayBio ? 'show bio' : 'hide bio'}>{this.state.bio}</div>\n                                </div>\n                                <div className='large-screen-bio'>\n                                    {this.state.bio}\n                                </div>\n                            </div>\n\n                            <div className='col-lg-9 music-container'>\n                                <div className='row toggle'>\n                                    {this.state.toggle !== 'albumTracklist' &&\n                                        <div className='buttons'>\n                                            <button \n                                                onClick={() => this.toggle('albums')}\n                                                id='albums-button'\n                                                className={this.state.toggle === 'albums' ? 'active-button' : 'inactive-button'}>\n                                                    Albums\n                                            </button>\n                                            <button \n                                                onClick={() => this.toggle('tracklist')}\n                                                id='tracklist-button'\n                                                className={this.state.toggle === 'tracklist' ? 'active-button' : 'inactive-button'}>\n                                                    Tracklist\n                                            </button>\n                                        </div>\n                                    }\n                                    {this.state.toggle === 'albumTracklist' &&\n                                        <div className='row album-info'>\n                                            <div className='col-lg-3 col-12 albums-button'>\n                                                <button onClick={() => this.toggle('albums')} className='back-to-albums'><i className=\"fas fa-long-arrow-alt-left\"></i> Albums</button>\n                                            </div>\n                                            <div className='col-lg-6 col-12 album-tracklist-title' >\n                                                <h2>{this.state.albumTitle}</h2>\n                                            </div>\n                                            <div className='col-lg-3'></div>\n\n                                        </div>\n                                    }\n                                </div>\n                                {this.state.toggle === 'albums' &&\n                                    <div className='container'>\n                                        <div className='row albums'>\n                                            {this.state.albums.map(album => {\n                                                return(\n                                                    <div className='col-lg-4'><Album album={album.album} displayAlbum={() => this.displayAlbum(album)}  /></div>\n                                                )\n                                            })\n                                        }</div>\n                                </div>}\n                                {this.state.toggle === 'tracklist' &&\n                                    <TrackList tracklist={this.state.tracklist}  />\n                                }\n\n                                {this.state.toggle === 'albumTracklist' &&\n                                    <AlbumTracklist tracklist={this.state.albumTracklist} albumCover={this.state.albumCover} albumTitle={this.state.albumTitle} />}\n                            </div>\n                        </div>\n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default Results;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './style.css';\n\nconst TopSong = (props) => {\n\n    const [isPlaying, setIsPlaying] = useState(false);\n    // const [redirect, setRedirect] = useState(false);\n\n    function playSong() {\n        let audioEl = document.getElementById(props.track.title);\n        audioEl.play();\n        setIsPlaying(true);\n        props.changePlaying(props.track.title)\n    }\n\n\n\n    function pauseSong() {\n        let audioEl = document.getElementById(props.track.title);\n        audioEl.pause();\n        setIsPlaying(false);\n    }\n\n    // if(!props.isPlaying) {\n    //     console.log(props.isPlaying)\n    //     pauseSong();\n    // }\n\n    return(\n        <div>\n            <div className='image'>\n                <img src={props.track.artist['picture_medium']} className='top-song-img' alt='top artist' /> <br />\n                {!isPlaying && \n                    <button onClick={playSong} className='play'>\n                        <svg width=\"10em\" height=\"10em\" viewBox=\"0 0 16 16\" className=\"bi bi-play\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fillRule=\"evenodd\" d=\"M10.804 8L5 4.633v6.734L10.804 8zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692z\"/>\n                        </svg>\n                    </button>\n                }\n                {isPlaying &&\n                    <button onClick={pauseSong} className='pause'>\n                        <svg width=\"10em\" height=\"10em\" viewBox=\"0 0 16 16\" className=\"bi bi-pause-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fillRule=\"evenodd\" d=\"M6 3.5a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5zm4 0a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5z\"/>\n                        </svg>\n                    </button>}\n            </div>\n            <div className='song-info'>\n                <Link to={`/results/${props.track.artist.name}`}><button className='artist' ><h4>{props.track.artist.name}</h4></button></Link>\n                <div>{props.track.title}</div>\n                <audio src={props.track.preview} id={props.track.title} /> <br />\n            </div>\n        </div>\n    )\n}\n\nexport default TopSong","import React, {Component} from 'react';\n\nimport API from '../../utils/API';\n\nimport TopSong from '../../components/topSong/topSong';\nimport Navbar from '../../components/navbar/navbar';\n\nimport './style.css';\n\nclass TopHits extends Component {\n    state={\n        tracks: [],\n        song: ''\n    }\n\n    componentDidMount() {\n        \n        API.getTopHits()\n        .then(res=> {\n            //console.log(res.data.tracks.data)\n            this.setState({\n                tracks: res.data.tracks.data\n            })\n        })\n\n    }\n\n    changePlaying = (song) => {\n        this.setState({\n            currentSong: song\n        })\n        //console.log(song)\n    }\n\n    render() {\n        return(\n            <div>\n                <Navbar />\n                <div>\n                    <div className='h1 title bg-light'>Top Hits</div>\n                    <div className='container-fluid top-hits'>\n                        <div className='row'>\n                            {this.state.tracks.map(track => {\n                                // console.log(track);\n                                return(\n                                    <div className='col-lg-4 col-sm-6 top-hit'>\n                                        <TopSong track={track} changePlaying={(song) => this.changePlaying(song)} isPlaying={this.state.currentSong === track.title ? true : false} />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default TopHits;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Results from './pages/results/results';\nimport TopHits from './pages/topHits/topHits';\nimport TrackList from './pages/trackList/trackList';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        {/* <Navbar /> */}\n        <Route exact path='/results/:artist' component={Results} />\n        <Route exact path='/trackList/:album' component={TrackList} />\n        <Route exact path='/' component={TopHits} />\n      </BrowserRouter>\n      {/* <Search /> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <App />\n  // </BrowserRouter>,\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}